name: Update maps

on:
  #push:
  #  branches:
  #    - master
  #    - workflow-drafts
  workflow_dispatch:
  #schedule:
  #  - cron: '0 2 * * *'

env:
  WORKDIR: work

jobs:
  update-maps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Link workdir
        run: ln -s ${{ runner.temp }} "$WORKDIR"
      - name: Cache apt packages
        id: cache-apt-id
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/cache-apt
          key: ${{ runner.os }}-cache-apt-v2
      - name: Download apt packages (cache)
        uses: airvzxf/cache-anything-new-action@v1.0.1
        env:
          APT_ARGS: '--download-only'
        with:
          script: apt.sh
          is_cached: ${{ steps.cache-apt-id.outputs.cache-hit }}
          cache: ${{ runner.temp }}/cache-apt
          snapshot: /var/cache/apt
          exclude: ''
      - name: Install apt packages (real)
        run: |
          cd ${{ github.workspace }}/.github/workflows
          chmod +x apt.sh
          ./apt.sh
      - name: Fetch pmetro etag
        run: |
          cd ${{ github.workspace }}
          ./prepare-etag.sh
      - name: Cache pmetro
        uses: actions/cache@v2
        env:
          cache-name: workdir-cache
        with:
          path: ${{ runner.temp }}/cache
          key: pmetro-v1-${{ hashFiles('pmetro_new_etag.txt') }}
      - name: Fetch pmetro
        run: |
          cd ${{ github.workspace }}
          ./prepare-fetch.sh
      - name: Cache geonames
        id: cache-geonames-id
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/geonames-db
          key: geonames-v2
      - name: Fetch geonames
        if: ${{ !steps.cache-geonames-id.outputs.cache-hit }}
        run: |
          cd ${{ github.workspace }}
          ./prepare-geoinfo.sh
      - name: Setup python + cache
        uses: actions/setup-python@v2
        with:
          cache: pip
      - name: Install python deps
        run: pip install -r ${{ github.workspace }}/requirements.txt
      - name: Run sync
        run: |
          cd ${{ github.workspace }} 
          ./run-sync.py
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: maps-www
          path: ${{ runner.temp }}/base/www
          retention-days: 2

  push-maps:
    runs-on: ubuntu-latest
    if: >-
      github.repository == 'AbsurdlySuspicious/ametro-services' && 
      ( github.event_name == 'workflow_dispatch' || 
        github.event_name == 'schedule' )
    needs:
      - update-maps
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: maps-www
          path: ${{ runner.temp }}/www
      - name: Checkout maps-repo branch
        uses: actions/checkout@v2
        with:
          ref: maps-repo
          path: maps
      - name: Checkout master/current branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
          path: master
      - name: Push maps repo
        run: |
          cd maps
          bash ../master/.github/workflows/push.sh ${{ runner.temp }}/www

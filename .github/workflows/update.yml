name: Update maps

on:
  push:
    branches:
      - master
      - workflow-drafts
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

env:
  WORKDIR: work

jobs:
  update-maps:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Link workdir
        run: ln -s ${{ runner.temp }} "$WORKDIR"
      - name: Install apt packages
        run: |
          sudo apt install -y file curl perl grep innoextract
      - name: Fetch pmetro etag
        id: fetch-etag-id
        run: |
          cd ${{ github.workspace }}
          ./prepare-etag.sh
      - name: Cache pmetro
        if: ${{ steps.fetch-etag-id.outputs.is_invalid == '0' }}
        uses: actions/cache@v3
        env:
          cache-name: workdir-cache
        with:
          path: ${{ runner.temp }}/cache
          key: pmetro-v2-${{ hashFiles('work/etag/pmetro_new_etag.txt') }}
      - name: Fetch and/or extract pmetro
        run: |
          cd ${{ github.workspace }}
          ./prepare-fetch.sh
      - name: Cache geonames
        id: cache-geonames-id
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/geonames-db
          key: geonames-v3
      - name: Fetch geonames
        if: ${{ !steps.cache-geonames-id.outputs.cache-hit }}
        run: |
          cd ${{ github.workspace }}
          ./prepare-geoinfo.sh
      - name: Setup python + pip cache
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: pip
      - name: Install python deps
        run: pip3.9 install wheel && pip3.9 install -r ${{ github.workspace }}/freeze.txt
      - name: Run sync
        run: |
          cd ${{ github.workspace }} 
          ./run-sync.py
      - name: Upload artifacts (maps)
        uses: actions/upload-artifact@v4
        with:
          name: maps-www
          path: ${{ runner.temp }}/base/www
          retention-days: 2
          include-hidden-files: true
      - name: Upload artifacts (installers)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: installers
          path: ${{ runner.temp }}/installers
          retention-days: 1
          include-hidden-files: true

  push-maps:
    runs-on: ubuntu-20.04
    if: >-
      github.repository == 'AbsurdlySuspicious/ametro-services' && 
      (   github.event_name == 'workflow_dispatch' || 
        ( github.event_name == 'schedule' && github.ref_name == 'master' ) )
    needs:
      - update-maps
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: maps-www
          path: ${{ runner.temp }}/www
      - name: Checkout maps-repo branch
        uses: actions/checkout@v3
        with:
          ref: maps-repo
          path: maps
      - name: Checkout master/current branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          path: master
      - name: Push maps repo
        run: |
          cd maps
          bash ../master/.github/workflows/push.sh ${{ runner.temp }}/www
